import { FunctionCallNode } from './node';
declare const getFunctions: (functionNames: string | string[] | readonly string[]) => {};
declare const standardFunctionNames: readonly ["AVG", "COUNT", "DISTINCT", "MAX", "MIN", "SUM", "ABS", "COALESCE", "LEFT", "LENGTH", "LOWER", "LTRIM", "RANDOM", "RIGHT", "ROUND", "RTRIM", "SUBSTR", "TRIM", "UPPER", "HSTORE", "TS_RANK", "TS_RANK_CD", "PLAINTO_TSQUERY", "TO_TSQUERY", "TO_TSVECTOR", "SETWEIGHT", "YEAR", "MONTH", "DAY", "HOUR", "CURRENT_TIMESTAMP", "JSONB_ARRAY_LENGTH", "JSONB_BUILD_ARRAY", "JSONB_BUILD_OBECT", "JSONB_EXTRACT_PATH", "JSONB_INSERT", "JSONB_OBJECT", "JSONB_PRETTY", "JSONB_SET", "JSONB_STRIP_NULLS", "JSONB_TYPEOF", "TO_JSONB", "JSONB_ARRAY_ELEMENTS", "JSONB_ARRAY_ELEMENTS_TEXT", "JSONB_EACH", "JSONB_EACH_TEXT", "JSONB_OBJECT_KEYS", "JSONB_AGG"];
declare type StandardFunctions = {
    [K in (typeof standardFunctionNames)[number]]: (...args: any[]) => FunctionCallNode;
};
declare const getStandardFunctions: () => StandardFunctions;
export { StandardFunctions, getFunctions, getStandardFunctions };
