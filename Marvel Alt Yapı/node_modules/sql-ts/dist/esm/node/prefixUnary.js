'use strict';
import extend from 'lodash/extend';
import { AliasNode, Node, valueExpressionMixin } from '.';
let valueExpressionMixed = false;
export class PrefixUnaryNode extends Node {
    constructor(config) {
        super('PREFIX UNARY');
        this.left = config.left;
        this.operator = config.operator;
        // Delay mixin to runtime, when all nodes have been defined, and
        // mixin only once. ValueExpressionMixin has circular dependencies.
        if (!valueExpressionMixed) {
            valueExpressionMixed = true;
            extend(PrefixUnaryNode.prototype, valueExpressionMixin());
        }
    }
}
extend(PrefixUnaryNode.prototype, AliasNode.AliasMixin);
//# sourceMappingURL=prefixUnary.js.map