'use strict';
import extend from 'lodash/extend';
import { AliasNode, Node, valueExpressionMixin } from '.';
let valueExpressionMixed = false;
export class CastNode extends Node {
    constructor(value, dataType) {
        super('CAST');
        this.value = value;
        this.dataType = dataType;
        // Delay mixin to runtime, when all nodes have been defined, and
        // mixin only once. ValueExpressionMixin has circular dependencies.
        if (!valueExpressionMixed) {
            valueExpressionMixed = true;
            extend(CastNode.prototype, valueExpressionMixin());
        }
    }
}
extend(CastNode.prototype, AliasNode.AliasMixin);
//# sourceMappingURL=cast.js.map